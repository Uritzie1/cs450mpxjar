;***********************************************************;	MPX: The MultiProgramming eXecutive;	Project to Accompany;	A Practical Approach to Operating Systems;	Malcolm G. Lane & James D. Mooney;	Copyright 1993, P.W.S. Kent Publishing Co., Boston, MA.;;	File Name: proc5.asm;;	Author: M. Lane, J. Mooney;	Version: 2.1b;	Date: 09/14/93;;	Purpose: Test process for Module R-4;;	Environments: IBM-PC;;***********************************************************; Change Log:;;	09/14/93  jdm	modified for large model;;***********************************************************          CON	   EQU     01H          PRT      EQU     02H	  WRITE    EQU     01H          IDLE	   EQU	   00H          EXIT     EQU     05H          NODEV    EQU     00H	  CR	   EQU	   0DH	  LF	   EQU	   0AH	  STAK    SEGMENT  STACK		   DB	   32 DUP ('STACK   ')   ; 256 BYTES	  STAK    ENDS	  DATA	   SEGMENT	  MSG1	   DB	   'Proc5 dispatched.',CR,LF,'$'          MSG2     DB      'Proc5 terminating.',CR,LF,'$'          MSG3     DB      'Proc5 dispatched after exit!',CR,LF,'$'	  DATA	   ENDS	  CODE	   SEGMENT		   ASSUME  CS:CODE,DS:DATA,ES:DATA,SS:STAK	  MAIN	   PROC    FAR	 START:    MOV	   AX,DATA   ; SET UP DATA SEGMENT		   MOV	   DS,AX		   MOV	   ES,AX     ; SET UP EXTRA SEGMENT	LOOP1:                   ; display running message		   MOV	   DX,OFFSET MSG1		   MOV	   AH,09H		   INT	   21H                   ; perform IDLE system call		   MOV     DX, 0	;null length ptr		   PUSH    DX                   PUSH    DX	           MOV	   DX, 0	;null buffer ptr		   PUSH    DX                   PUSH    DX		   MOV     DX,NODEV	;null subcode		   PUSH    DX		   MOV     DX,IDLE	;IDLE op code		   PUSH    DX		   INT	   60H		;trap to handler                   ADD     SP,12	;cleanup stack                   ; display terminating message		   MOV	   DX,OFFSET MSG2		   MOV	   AH,09H		   INT	   21H                   ; perform EXIT system call		   MOV     DX, 0	;null length ptr		   PUSH    DX                   PUSH    DX	           MOV	   DX, 0	;null buffer ptr		   PUSH    DX		   PUSH    DX		   MOV     DX,NODEV	;null subcode		   PUSH    DX		   MOV     DX,EXIT	;EXIT op code		   PUSH    DX		   INT	   60H		;trap to handler                   ADD     SP,8		;cleanup stack                   ; display error message if dispatched again		   MOV	   DX,OFFSET MSG3		   MOV	   AH,09H		   INT	   21H		   JMP     LOOP1	  MAIN	   ENDP	  CODE	   ENDS		   END	   START